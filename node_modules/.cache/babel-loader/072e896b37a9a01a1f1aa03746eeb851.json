{"ast":null,"code":"var _jsxFileName = \"/Users/marcelo/Documents/passwordgen.live/password-generator/src/components/Meter.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport { animated, useSpring } from 'react-spring';\nimport config from 'config';\nimport { media } from 'styles/helpers';\nimport useTheme from 'hooks/useTheme';\nconst Styles = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n  margin: 0 -2rem;\n  padding: 1rem 0.5rem;\n  line-height: 1;\n  font-size: 0.8em;\n  background: repeating-linear-gradient(\n    -45deg,\n    transparent,\n    transparent 1rem,\n    hsla(0, 0%, 0%, 0.05) 1rem,\n    hsla(0, 0%, 0%, 0.05) 2rem\n  );\n  cursor: default;\n  span:nth-child(1) {\n    svg {\n      height: 3em;\n    }\n  }\n  span:nth-child(2) {\n    font-weight: bold;\n  }\n  ${media.tablet`\n    font-size: 1em;\n    margin: 0;\n  `}\n`;\nconst Animated = animated(Styles);\nconst {\n  strengthsEnum\n} = config;\nconst strengthGlyphs = {\n  [strengthsEnum.OK]: React.createElement(NervousFace, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }),\n  [strengthsEnum.GOOD]: React.createElement(HappyFace, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }),\n  [strengthsEnum.STRONG]: React.createElement(CoolFace, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  })\n};\n\nconst getStrength = bits => {\n  if (bits <= 45) return strengthsEnum.OK;\n  if (bits > 45 && bits <= 60) return strengthsEnum.GOOD;\n  return strengthsEnum.STRONG;\n};\n\nexport default function Meter({\n  entropy\n}) {\n  const theme = useTheme();\n  const strength = getStrength(entropy);\n  const emoji = strengthGlyphs[strength];\n  const backgroundSpring = useSpring({\n    config: {\n      duration: 400\n    },\n    backgroundColor: theme.meterColors[strength],\n    boxShadow: `0 0 1rem ${theme.meterColors[strength]}`\n  });\n  entropy = Math.round(entropy);\n  return React.createElement(Animated, {\n    style: backgroundSpring,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    \"aria-label\": strength,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, emoji), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, strength), React.createElement(\"span\", {\n    title: `About ${entropy} bits of entropy`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, \"~\", entropy, \" bits\"));\n}","map":{"version":3,"sources":["/Users/marcelo/Documents/passwordgen.live/password-generator/src/components/Meter.js"],"names":["React","styled","animated","useSpring","config","media","useTheme","Styles","div","tablet","Animated","strengthsEnum","strengthGlyphs","OK","GOOD","STRONG","getStrength","bits","Meter","entropy","theme","strength","emoji","backgroundSpring","duration","backgroundColor","meterColors","boxShadow","Math","round"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,cAApC;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AAEA,MAAMC,MAAM,GAAGN,MAAM,CAACO,GAAI;;;;;;;;;;;;;;;;;;;;;;;;IAwBtBH,KAAK,CAACI,MAAO;;;GAGb;CA3BJ;AA8BA,MAAMC,QAAQ,GAAGR,QAAQ,CAACK,MAAD,CAAzB;AAEA,MAAM;AAAEI,EAAAA;AAAF,IAAoBP,MAA1B;AACA,MAAMQ,cAAc,GAAG;AACrB,GAACD,aAAa,CAACE,EAAf,GAAoB,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADC;AAErB,GAACF,aAAa,CAACG,IAAf,GAAsB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFD;AAGrB,GAACH,aAAa,CAACI,MAAf,GAAwB,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHH,CAAvB;;AAMA,MAAMC,WAAW,GAAGC,IAAI,IAAI;AAC1B,MAAIA,IAAI,IAAI,EAAZ,EAAgB,OAAON,aAAa,CAACE,EAArB;AAChB,MAAII,IAAI,GAAG,EAAP,IAAaA,IAAI,IAAI,EAAzB,EAA6B,OAAON,aAAa,CAACG,IAArB;AAC7B,SAAOH,aAAa,CAACI,MAArB;AACD,CAJD;;AAMA,eAAe,SAASG,KAAT,CAAe;AAAEC,EAAAA;AAAF,CAAf,EAA4B;AACzC,QAAMC,KAAK,GAAGd,QAAQ,EAAtB;AACA,QAAMe,QAAQ,GAAGL,WAAW,CAACG,OAAD,CAA5B;AACA,QAAMG,KAAK,GAAGV,cAAc,CAACS,QAAD,CAA5B;AACA,QAAME,gBAAgB,GAAGpB,SAAS,CAAC;AACjCC,IAAAA,MAAM,EAAE;AAAEoB,MAAAA,QAAQ,EAAE;AAAZ,KADyB;AAEjCC,IAAAA,eAAe,EAAEL,KAAK,CAACM,WAAN,CAAkBL,QAAlB,CAFgB;AAGjCM,IAAAA,SAAS,EAAG,YAAWP,KAAK,CAACM,WAAN,CAAkBL,QAAlB,CAA4B;AAHlB,GAAD,CAAlC;AAMAF,EAAAA,OAAO,GAAGS,IAAI,CAACC,KAAL,CAAWV,OAAX,CAAV;AAEA,SACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEI,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,kBAAYF,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA6BC,KAA7B,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOD,QAAP,CAFF,EAGE;AAAM,IAAA,KAAK,EAAG,SAAQF,OAAQ,kBAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAmDA,OAAnD,UAHF,CADF;AAOD","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport { animated, useSpring } from 'react-spring';\nimport config from 'config';\nimport { media } from 'styles/helpers';\nimport useTheme from 'hooks/useTheme';\n\nconst Styles = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-evenly;\n  margin: 0 -2rem;\n  padding: 1rem 0.5rem;\n  line-height: 1;\n  font-size: 0.8em;\n  background: repeating-linear-gradient(\n    -45deg,\n    transparent,\n    transparent 1rem,\n    hsla(0, 0%, 0%, 0.05) 1rem,\n    hsla(0, 0%, 0%, 0.05) 2rem\n  );\n  cursor: default;\n  span:nth-child(1) {\n    svg {\n      height: 3em;\n    }\n  }\n  span:nth-child(2) {\n    font-weight: bold;\n  }\n  ${media.tablet`\n    font-size: 1em;\n    margin: 0;\n  `}\n`;\n\nconst Animated = animated(Styles);\n\nconst { strengthsEnum } = config;\nconst strengthGlyphs = {\n  [strengthsEnum.OK]: <NervousFace />,\n  [strengthsEnum.GOOD]: <HappyFace />,\n  [strengthsEnum.STRONG]: <CoolFace />\n};\n\nconst getStrength = bits => {\n  if (bits <= 45) return strengthsEnum.OK;\n  if (bits > 45 && bits <= 60) return strengthsEnum.GOOD;\n  return strengthsEnum.STRONG;\n};\n\nexport default function Meter({ entropy }) {\n  const theme = useTheme();\n  const strength = getStrength(entropy);\n  const emoji = strengthGlyphs[strength];\n  const backgroundSpring = useSpring({\n    config: { duration: 400 },\n    backgroundColor: theme.meterColors[strength],\n    boxShadow: `0 0 1rem ${theme.meterColors[strength]}`\n  });\n\n  entropy = Math.round(entropy);\n\n  return (\n    <Animated style={backgroundSpring}>\n      <span aria-label={strength}>{emoji}</span>\n      <span>{strength}</span>\n      <span title={`About ${entropy} bits of entropy`}>~{entropy} bits</span>\n    </Animated>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}