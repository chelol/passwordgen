{"ast":null,"code":"var _jsxFileName = \"/Users/marcelo/Documents/passwordgen.live/password-generator/src/components/common/ChoiceToggle.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { media } from 'styles/helpers';\nconst Styles = styled.div`\n  display: flex;\n  overflow: hidden;\n  ${media.tablet`\n    padding: 0 0.5em;\n  `}\n  button {\n    font-size: 1em;\n    font-family: ${p => p.theme.fontFamily};\n    font-weight: bold;\n    border: none;\n    background: none;\n    margin: 0;\n    padding: 1rem 1.5rem;\n    cursor: pointer;\n    border-radius: ${p => p.theme.borderRadius} ${p => p.theme.borderRadius} 0 0;\n  }\n  button:hover {\n    background: hsla(0, 0%, 94%, 0.5);\n  }\n  button:focus {\n    outline: none;\n  }\n  button.selected {\n    background: white;\n  }\n  button.selected:hover {\n    background: white;\n    cursor: default;\n  }\n  ${media.phone`\n    /* button {\n      padding: 0.75rem 1.5rem;\n    }\n    button:first-child {\n      padding-left: 1.75rem;\n    }\n    button:last-child {\n      padding-right: 1.75rem;\n    } */\n  `}\n`;\nexport default function ChoiceToggle({\n  choices,\n  onToggle,\n  initial\n}) {\n  const labels = Object.keys(choices);\n  const [selected, setSelected] = useState(initial !== null && initial !== void 0 ? initial : labels[0]);\n\n  const handleClick = label => {\n    setSelected(label);\n    onToggle(choices[label]);\n  };\n\n  return React.createElement(Styles, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, labels.map(l => React.createElement(\"button\", {\n    key: l,\n    className: selected === l ? 'selected' : undefined,\n    onClick: () => handleClick(l),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, l)));\n}\nChoiceToggle.propTypes = {\n  choices: PropTypes.object.isRequired,\n  onToggle: PropTypes.func,\n  initial: PropTypes.string\n};","map":{"version":3,"sources":["/Users/marcelo/Documents/passwordgen.live/password-generator/src/components/common/ChoiceToggle.js"],"names":["React","useState","PropTypes","styled","media","Styles","div","tablet","p","theme","fontFamily","borderRadius","phone","ChoiceToggle","choices","onToggle","initial","labels","Object","keys","selected","setSelected","handleClick","label","map","l","undefined","propTypes","object","isRequired","func","string"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,MAAMC,MAAM,GAAGF,MAAM,CAACG,GAAI;;;IAGtBF,KAAK,CAACG,MAAO;;GAEb;;;mBAGeC,CAAC,IAAIA,CAAC,CAACC,KAAF,CAAQC,UAAW;;;;;;;qBAOtBF,CAAC,IAAIA,CAAC,CAACC,KAAF,CAAQE,YAAa,IAAGH,CAAC,IAAIA,CAAC,CAACC,KAAF,CAAQE,YAAa;;;;;;;;;;;;;;;IAexEP,KAAK,CAACQ,KAAM;;;;;;;;;;GAUZ;CAxCJ;AA2CA,eAAe,SAASC,YAAT,CAAsB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,QAAX;AAAqBC,EAAAA;AAArB,CAAtB,EAAsD;AACnE,QAAMC,MAAM,GAAGC,MAAM,CAACC,IAAP,CAAYL,OAAZ,CAAf;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BpB,QAAQ,CAACe,OAAD,aAACA,OAAD,cAACA,OAAD,GAAYC,MAAM,CAAC,CAAD,CAAlB,CAAxC;;AAEA,QAAMK,WAAW,GAAGC,KAAK,IAAI;AAC3BF,IAAAA,WAAW,CAACE,KAAD,CAAX;AACAR,IAAAA,QAAQ,CAACD,OAAO,CAACS,KAAD,CAAR,CAAR;AACD,GAHD;;AAKA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,MAAM,CAACO,GAAP,CAAWC,CAAC,IACX;AACE,IAAA,GAAG,EAAEA,CADP;AAEE,IAAA,SAAS,EAAEL,QAAQ,KAAKK,CAAb,GAAiB,UAAjB,GAA8BC,SAF3C;AAGE,IAAA,OAAO,EAAE,MAAMJ,WAAW,CAACG,CAAD,CAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGA,CALH,CADD,CADH,CADF;AAaD;AAEDZ,YAAY,CAACc,SAAb,GAAyB;AACvBb,EAAAA,OAAO,EAAEZ,SAAS,CAAC0B,MAAV,CAAiBC,UADH;AAEvBd,EAAAA,QAAQ,EAAEb,SAAS,CAAC4B,IAFG;AAGvBd,EAAAA,OAAO,EAAEd,SAAS,CAAC6B;AAHI,CAAzB","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { media } from 'styles/helpers';\n\nconst Styles = styled.div`\n  display: flex;\n  overflow: hidden;\n  ${media.tablet`\n    padding: 0 0.5em;\n  `}\n  button {\n    font-size: 1em;\n    font-family: ${p => p.theme.fontFamily};\n    font-weight: bold;\n    border: none;\n    background: none;\n    margin: 0;\n    padding: 1rem 1.5rem;\n    cursor: pointer;\n    border-radius: ${p => p.theme.borderRadius} ${p => p.theme.borderRadius} 0 0;\n  }\n  button:hover {\n    background: hsla(0, 0%, 94%, 0.5);\n  }\n  button:focus {\n    outline: none;\n  }\n  button.selected {\n    background: white;\n  }\n  button.selected:hover {\n    background: white;\n    cursor: default;\n  }\n  ${media.phone`\n    /* button {\n      padding: 0.75rem 1.5rem;\n    }\n    button:first-child {\n      padding-left: 1.75rem;\n    }\n    button:last-child {\n      padding-right: 1.75rem;\n    } */\n  `}\n`;\n\nexport default function ChoiceToggle({ choices, onToggle, initial }) {\n  const labels = Object.keys(choices);\n  const [selected, setSelected] = useState(initial ?? labels[0]);\n\n  const handleClick = label => {\n    setSelected(label);\n    onToggle(choices[label]);\n  };\n\n  return (\n    <Styles>\n      {labels.map(l => (\n        <button\n          key={l}\n          className={selected === l ? 'selected' : undefined}\n          onClick={() => handleClick(l)}\n        >\n          {l}\n        </button>\n      ))}\n    </Styles>\n  );\n}\n\nChoiceToggle.propTypes = {\n  choices: PropTypes.object.isRequired,\n  onToggle: PropTypes.func,\n  initial: PropTypes.string\n};\n"]},"metadata":{},"sourceType":"module"}