{"ast":null,"code":"var _jsxFileName = \"/Users/marcelo/Documents/passwordgen.live/password-generator/src/components/PasswordParams.js\";\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport config from 'config';\nimport { media } from 'styles/helpers';\nimport InputRow from 'components/common/InputRow';\nimport CheckBox from 'components/common/CheckBox';\nimport RangeSlider from 'components/common/RangeSlider';\nconst Slider = styled(RangeSlider)`\n  ${media.tablet`\n    width: 70%;\n  `}\n`;\nconst Styles = styled.div`\n  padding: 2rem;\n  .checkboxes {\n    > div {\n      flex-basis: 50%;\n      margin-right: 0;\n    }\n  }\n  ${media.tablet`    \n  .checkboxes {\n    > div {\n      flex-basis: auto;\n      margin-right: 3rem;\n    }\n  }\n  `}\n  ${p => p.isPwaMode && css`\n      padding: 1rem 2rem;\n      & div:first-child {\n        margin-top: 0;\n      }\n    `}\n`;\nexport default function PasswordParams({\n  values,\n  onChange,\n  isPwaMode\n}) {\n  const {\n    modes\n  } = config;\n  const pwValues = values[modes.PW];\n  return React.createElement(Styles, {\n    isPwaMode: isPwaMode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, !isPwaMode && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Good passwords are at least 12 characters long. If you can, include letters, numbers, & symbols in random order.\"), React.createElement(InputRow, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(Slider, {\n    label: \"Length\",\n    name: \"length\",\n    value: pwValues.length,\n    min: 8,\n    max: 48,\n    onChange: onChange,\n    title: \"Adjust password length\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })), \"Characters\", React.createElement(InputRow, {\n    className: \"checkboxes\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(CheckBox, {\n    label: \"abc\",\n    name: \"lower\",\n    checked: pwValues.lower,\n    onChange: onChange,\n    title: \"Include lowercase letter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(CheckBox, {\n    label: \"ABC\",\n    name: \"upper\",\n    checked: pwValues.upper,\n    onChange: onChange,\n    title: \"Include uppercase letter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }), React.createElement(CheckBox, {\n    label: \"123\",\n    name: \"numbers\",\n    checked: pwValues.numbers,\n    onChange: onChange,\n    title: \"Include numbers\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(CheckBox, {\n    label: \"$@!\",\n    name: \"symbols\",\n    checked: pwValues.symbols,\n    onChange: onChange,\n    title: \"Include symbols\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/Users/marcelo/Documents/passwordgen.live/password-generator/src/components/PasswordParams.js"],"names":["React","styled","css","config","media","InputRow","CheckBox","RangeSlider","Slider","tablet","Styles","div","p","isPwaMode","PasswordParams","values","onChange","modes","pwValues","PW","length","lower","upper","numbers","symbols"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AAEA,MAAMC,MAAM,GAAGP,MAAM,CAACM,WAAD,CAAc;IAC/BH,KAAK,CAACK,MAAO;;GAEb;CAHJ;AAMA,MAAMC,MAAM,GAAGT,MAAM,CAACU,GAAI;;;;;;;;IAQtBP,KAAK,CAACK,MAAO;;;;;;;GAOb;IACAG,CAAC,IACDA,CAAC,CAACC,SAAF,IACAX,GAAI;;;;;KAKF;CAvBN;AA0BA,eAAe,SAASY,cAAT,CAAwB;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,QAAV;AAAoBH,EAAAA;AAApB,CAAxB,EAAyD;AACtE,QAAM;AAAEI,IAAAA;AAAF,MAAYd,MAAlB;AACA,QAAMe,QAAQ,GAAGH,MAAM,CAACE,KAAK,CAACE,EAAP,CAAvB;AACA,SACE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAEN,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAACA,SAAD,IACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wHAFJ,EAOE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,KAAK,EAAC,QADR;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,KAAK,EAAEK,QAAQ,CAACE,MAHlB;AAIE,IAAA,GAAG,EAAE,CAJP;AAKE,IAAA,GAAG,EAAE,EALP;AAME,IAAA,QAAQ,EAAEJ,QANZ;AAOE,IAAA,KAAK,EAAC,wBAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPF,gBAmBE,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAC,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,KAAK,EAAC,KADR;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,OAAO,EAAEE,QAAQ,CAACG,KAHpB;AAIE,IAAA,QAAQ,EAAEL,QAJZ;AAKE,IAAA,KAAK,EAAC,0BALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAQE,oBAAC,QAAD;AACE,IAAA,KAAK,EAAC,KADR;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,OAAO,EAAEE,QAAQ,CAACI,KAHpB;AAIE,IAAA,QAAQ,EAAEN,QAJZ;AAKE,IAAA,KAAK,EAAC,0BALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAeE,oBAAC,QAAD;AACE,IAAA,KAAK,EAAC,KADR;AAEE,IAAA,IAAI,EAAC,SAFP;AAGE,IAAA,OAAO,EAAEE,QAAQ,CAACK,OAHpB;AAIE,IAAA,QAAQ,EAAEP,QAJZ;AAKE,IAAA,KAAK,EAAC,iBALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,EAsBE,oBAAC,QAAD;AACE,IAAA,KAAK,EAAC,KADR;AAEE,IAAA,IAAI,EAAC,SAFP;AAGE,IAAA,OAAO,EAAEE,QAAQ,CAACM,OAHpB;AAIE,IAAA,QAAQ,EAAER,QAJZ;AAKE,IAAA,KAAK,EAAC,iBALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBF,CAnBF,CADF;AAoDD","sourcesContent":["import React from 'react';\nimport styled, { css } from 'styled-components';\nimport config from 'config';\nimport { media } from 'styles/helpers';\nimport InputRow from 'components/common/InputRow';\nimport CheckBox from 'components/common/CheckBox';\nimport RangeSlider from 'components/common/RangeSlider';\n\nconst Slider = styled(RangeSlider)`\n  ${media.tablet`\n    width: 70%;\n  `}\n`;\n\nconst Styles = styled.div`\n  padding: 2rem;\n  .checkboxes {\n    > div {\n      flex-basis: 50%;\n      margin-right: 0;\n    }\n  }\n  ${media.tablet`    \n  .checkboxes {\n    > div {\n      flex-basis: auto;\n      margin-right: 3rem;\n    }\n  }\n  `}\n  ${p =>\n    p.isPwaMode &&\n    css`\n      padding: 1rem 2rem;\n      & div:first-child {\n        margin-top: 0;\n      }\n    `}\n`;\n\nexport default function PasswordParams({ values, onChange, isPwaMode }) {\n  const { modes } = config;\n  const pwValues = values[modes.PW];\n  return (\n    <Styles isPwaMode={isPwaMode}>\n      {!isPwaMode && (\n        <p>\n          Good passwords are at least 12 characters long. If you can, include letters,\n          numbers, & symbols in random order. \n        </p>\n      )}\n      <InputRow>\n        <Slider\n          label=\"Length\"\n          name=\"length\"\n          value={pwValues.length}\n          min={8}\n          max={48}\n          onChange={onChange}\n          title=\"Adjust password length\"\n        />\n      </InputRow>\n      Characters\n      <InputRow className=\"checkboxes\">\n        <CheckBox\n          label=\"abc\"\n          name=\"lower\"\n          checked={pwValues.lower}\n          onChange={onChange}\n          title=\"Include lowercase letter\"\n        />\n        <CheckBox\n          label=\"ABC\"\n          name=\"upper\"\n          checked={pwValues.upper}\n          onChange={onChange}\n          title=\"Include uppercase letter\"\n        />\n        <CheckBox\n          label=\"123\"\n          name=\"numbers\"\n          checked={pwValues.numbers}\n          onChange={onChange}\n          title=\"Include numbers\"\n        />\n        <CheckBox\n          label=\"$@!\"\n          name=\"symbols\"\n          checked={pwValues.symbols}\n          onChange={onChange}\n          title=\"Include symbols\"\n        />\n      </InputRow>\n    </Styles>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}