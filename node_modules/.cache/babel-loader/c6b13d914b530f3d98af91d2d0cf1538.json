{"ast":null,"code":"var _jsxFileName = \"/Users/marcelo/Documents/passwordgen.live/password-generator/src/components/Params.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport config from 'config';\nimport PasswordParams from 'components/PasswordParams';\nimport PassphraseParams from 'components/PassphraseParams';\nimport { media } from 'styles/helpers';\nimport { useTransition, animated } from 'react-spring';\nconst Styles = styled.div`\n  background: white;\n  margin: 0 -2rem;\n  position: relative;\n  transition: all 300ms;\n  p {\n    font-size: 0.8em;\n  }\n  ${media.tablet`\n    border-radius: ${p => p.theme.borderRadius} ${p => p.theme.borderRadius} 0 0;\n    margin: 0;\n  `}\n`;\n\nconst AnimatedTab = ({\n  children,\n  ...props\n}) => {\n  return React.createElement(animated.div, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }), children);\n};\n\nexport default function Params({\n  mode,\n  values,\n  onChange,\n  isPwaMode\n}) {\n  const {\n    modes\n  } = config;\n  const tabTransitions = useTransition(mode, mode, {\n    config: {\n      duration: 200,\n      unique: true\n    },\n    initial: {\n      opacity: 1\n    },\n    from: {\n      opacity: 0,\n      transform: 'scale(1.05)'\n    },\n    enter: {\n      opacity: 1,\n      transform: 'scale(1)'\n    },\n    leave: {\n      opacity: 0,\n      position: 'absolute',\n      transform: 'scale(0.8)'\n    }\n  });\n  return React.createElement(Styles, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, tabTransitions.map(({\n    item,\n    props,\n    key\n  }) => {\n    return React.createElement(AnimatedTab, {\n      key: key,\n      style: props,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, item === modes.PW ? React.createElement(PasswordParams, {\n      values: values,\n      onChange: onChange,\n      isPwaMode: isPwaMode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }) : React.createElement(PassphraseParams, {\n      values: values,\n      onChange: onChange,\n      isPwaMode: isPwaMode,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }));\n  }));\n}","map":{"version":3,"sources":["/Users/marcelo/Documents/passwordgen.live/password-generator/src/components/Params.js"],"names":["React","styled","config","PasswordParams","PassphraseParams","media","useTransition","animated","Styles","div","tablet","p","theme","borderRadius","AnimatedTab","children","props","Params","mode","values","onChange","isPwaMode","modes","tabTransitions","duration","unique","initial","opacity","from","transform","enter","leave","position","map","item","key","PW"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,cAAP,MAA2B,2BAA3B;AACA,OAAOC,gBAAP,MAA6B,6BAA7B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,aAAT,EAAwBC,QAAxB,QAAwC,cAAxC;AAEA,MAAMC,MAAM,GAAGP,MAAM,CAACQ,GAAI;;;;;;;;IAQtBJ,KAAK,CAACK,MAAO;qBACIC,CAAC,IAAIA,CAAC,CAACC,KAAF,CAAQC,YAAa,IAAGF,CAAC,IAAIA,CAAC,CAACC,KAAF,CAAQC,YAAa;;GAExE;CAXJ;;AAcA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAY,KAAGC;AAAf,CAAD,KAA4B;AAC9C,SAAO,oBAAC,QAAD,CAAU,GAAV,oBAAkBA,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA0BD,QAA1B,CAAP;AACD,CAFD;;AAIA,eAAe,SAASE,MAAT,CAAgB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,MAAR;AAAgBC,EAAAA,QAAhB;AAA0BC,EAAAA;AAA1B,CAAhB,EAAuD;AACpE,QAAM;AAAEC,IAAAA;AAAF,MAAYpB,MAAlB;AACA,QAAMqB,cAAc,GAAGjB,aAAa,CAACY,IAAD,EAAOA,IAAP,EAAa;AAC/ChB,IAAAA,MAAM,EAAE;AAAEsB,MAAAA,QAAQ,EAAE,GAAZ;AAAiBC,MAAAA,MAAM,EAAE;AAAzB,KADuC;AAE/CC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAFsC;AAG/CC,IAAAA,IAAI,EAAE;AAAED,MAAAA,OAAO,EAAE,CAAX;AAAcE,MAAAA,SAAS,EAAE;AAAzB,KAHyC;AAI/CC,IAAAA,KAAK,EAAE;AAAEH,MAAAA,OAAO,EAAE,CAAX;AAAcE,MAAAA,SAAS,EAAE;AAAzB,KAJwC;AAK/CE,IAAAA,KAAK,EAAE;AAAEJ,MAAAA,OAAO,EAAE,CAAX;AAAcK,MAAAA,QAAQ,EAAE,UAAxB;AAAoCH,MAAAA,SAAS,EAAE;AAA/C;AALwC,GAAb,CAApC;AAQA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,cAAc,CAACU,GAAf,CAAmB,CAAC;AAAEC,IAAAA,IAAF;AAAQlB,IAAAA,KAAR;AAAemB,IAAAA;AAAf,GAAD,KAA0B;AAC5C,WACE,oBAAC,WAAD;AAAa,MAAA,GAAG,EAAEA,GAAlB;AAAuB,MAAA,KAAK,EAAEnB,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGkB,IAAI,KAAKZ,KAAK,CAACc,EAAf,GACC,oBAAC,cAAD;AAAgB,MAAA,MAAM,EAAEjB,MAAxB;AAAgC,MAAA,QAAQ,EAAEC,QAA1C;AAAoD,MAAA,SAAS,EAAEC,SAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAGC,oBAAC,gBAAD;AACE,MAAA,MAAM,EAAEF,MADV;AAEE,MAAA,QAAQ,EAAEC,QAFZ;AAGE,MAAA,SAAS,EAAEC,SAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADF;AAaD,GAdA,CADH,CADF;AAmBD","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport config from 'config';\nimport PasswordParams from 'components/PasswordParams';\nimport PassphraseParams from 'components/PassphraseParams';\nimport { media } from 'styles/helpers';\nimport { useTransition, animated } from 'react-spring';\n\nconst Styles = styled.div`\n  background: white;\n  margin: 0 -2rem;\n  position: relative;\n  transition: all 300ms;\n  p {\n    font-size: 0.8em;\n  }\n  ${media.tablet`\n    border-radius: ${p => p.theme.borderRadius} ${p => p.theme.borderRadius} 0 0;\n    margin: 0;\n  `}\n`;\n\nconst AnimatedTab = ({ children, ...props }) => {\n  return <animated.div {...props}>{children}</animated.div>;\n};\n\nexport default function Params({ mode, values, onChange, isPwaMode }) {\n  const { modes } = config;\n  const tabTransitions = useTransition(mode, mode, {\n    config: { duration: 200, unique: true },\n    initial: { opacity: 1 },\n    from: { opacity: 0, transform: 'scale(1.05)' },\n    enter: { opacity: 1, transform: 'scale(1)' },\n    leave: { opacity: 0, position: 'absolute', transform: 'scale(0.8)' }\n  });\n\n  return (\n    <Styles>\n      {tabTransitions.map(({ item, props, key }) => {\n        return (\n          <AnimatedTab key={key} style={props}>\n            {item === modes.PW ? (\n              <PasswordParams values={values} onChange={onChange} isPwaMode={isPwaMode} />\n            ) : (\n              <PassphraseParams\n                values={values}\n                onChange={onChange}\n                isPwaMode={isPwaMode}\n              />\n            )}\n          </AnimatedTab>\n        );\n      })}\n    </Styles>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}