{"ast":null,"code":"var _jsxFileName = \"/Users/marcelo/Documents/passwordgen.live/password-generator/src/components/common/CheckBox.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport theme from 'styles/theme';\nconst {\n  inputHighlightColor\n} = theme;\nconst {\n  offBlack,\n  blue\n} = theme.colors;\nconst Styles = styled.div`\n  display: inline-block;\n  margin: 0 2rem 0 0;\n  &:last-child {\n    margin: 0;\n  }\n  label {\n    position: relative;\n    display: inline-block;\n    cursor: pointer;\n    user-select: none;\n    padding: 0.5em 0 0.5em calc(1.5em + 1rem);\n  }\n  input {\n    position: absolute;\n    opacity: 0;\n    cursor: pointer;\n    height: 0;\n    width: 0;\n  }\n  /* checkbox */\n  span {\n    box-sizing: content-box;\n    position: absolute;\n    top: 0.5em;\n    left: 0;\n    height: 1.5em;\n    width: 1.5em;\n    background-color: white;\n    border-radius: ${p => p.theme.borderRadius};\n    border-radius: 50%;\n    border: 0.1rem solid ${offBlack};\n    transition: all 300ms;\n  }\n  label:hover input ~ span {\n    border: 0.1rem solid ${blue};\n  }\n  label input:checked ~ span {\n    background-color: ${inputHighlightColor};\n    border: 0.1rem solid transparent;\n  }\n  /* indicator */\n  span:after {\n    content: '';\n    position: absolute;\n    display: none;\n  }\n  label input:checked ~ span:after {\n    display: block;\n  }\n  label span:after {\n    left: 30%;\n    top: 10%;\n    width: 25%;\n    height: 55%;\n    border: solid white;\n    border-width: 0 0.2em 0.2em 0;\n    transform: rotate(45deg);\n    border-radius: 0.1em;\n  }\n`;\nexport default function CheckBox({\n  label,\n  name,\n  value,\n  checked,\n  onChange,\n  ...props\n}) {\n  return React.createElement(Styles, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, label, React.createElement(\"input\", Object.assign({\n    type: \"checkbox\",\n    name: name,\n    value: value,\n    checked: checked,\n    onChange: onChange\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  })), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/Users/marcelo/Documents/passwordgen.live/password-generator/src/components/common/CheckBox.js"],"names":["React","styled","theme","inputHighlightColor","offBlack","blue","colors","Styles","div","p","borderRadius","CheckBox","label","name","value","checked","onChange","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAA0BD,KAAhC;AACA,MAAM;AAAEE,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,IAAqBH,KAAK,CAACI,MAAjC;AAEA,MAAMC,MAAM,GAAGN,MAAM,CAACO,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;qBA6BLC,CAAC,IAAIA,CAAC,CAACP,KAAF,CAAQQ,YAAa;;2BAEpBN,QAAS;;;;2BAITC,IAAK;;;wBAGRF,mBAAoB;;;;;;;;;;;;;;;;;;;;;;CAtC5C;AA8DA,eAAe,SAASQ,QAAT,CAAkB;AAAEC,EAAAA,KAAF;AAASC,EAAAA,IAAT;AAAeC,EAAAA,KAAf;AAAsBC,EAAAA,OAAtB;AAA+BC,EAAAA,QAA/B;AAAyC,KAAGC;AAA5C,CAAlB,EAAuE;AACpF,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,KADH,EAEE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,IAAI,EAAEC,IAFR;AAGE,IAAA,KAAK,EAAEC,KAHT;AAIE,IAAA,OAAO,EAAEC,OAJX;AAKE,IAAA,QAAQ,EAAEC;AALZ,KAMMC,KANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CADF,CADF;AAgBD","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport theme from 'styles/theme';\n\nconst { inputHighlightColor } = theme;\nconst { offBlack, blue } = theme.colors;\n\nconst Styles = styled.div`\n  display: inline-block;\n  margin: 0 2rem 0 0;\n  &:last-child {\n    margin: 0;\n  }\n  label {\n    position: relative;\n    display: inline-block;\n    cursor: pointer;\n    user-select: none;\n    padding: 0.5em 0 0.5em calc(1.5em + 1rem);\n  }\n  input {\n    position: absolute;\n    opacity: 0;\n    cursor: pointer;\n    height: 0;\n    width: 0;\n  }\n  /* checkbox */\n  span {\n    box-sizing: content-box;\n    position: absolute;\n    top: 0.5em;\n    left: 0;\n    height: 1.5em;\n    width: 1.5em;\n    background-color: white;\n    border-radius: ${p => p.theme.borderRadius};\n    border-radius: 50%;\n    border: 0.1rem solid ${offBlack};\n    transition: all 300ms;\n  }\n  label:hover input ~ span {\n    border: 0.1rem solid ${blue};\n  }\n  label input:checked ~ span {\n    background-color: ${inputHighlightColor};\n    border: 0.1rem solid transparent;\n  }\n  /* indicator */\n  span:after {\n    content: '';\n    position: absolute;\n    display: none;\n  }\n  label input:checked ~ span:after {\n    display: block;\n  }\n  label span:after {\n    left: 30%;\n    top: 10%;\n    width: 25%;\n    height: 55%;\n    border: solid white;\n    border-width: 0 0.2em 0.2em 0;\n    transform: rotate(45deg);\n    border-radius: 0.1em;\n  }\n`;\n\nexport default function CheckBox({ label, name, value, checked, onChange, ...props }) {\n  return (\n    <Styles>\n      <label>\n        {label}\n        <input\n          type=\"checkbox\"\n          name={name}\n          value={value}\n          checked={checked}\n          onChange={onChange}\n          {...props}\n        />\n        <span />\n      </label>\n    </Styles>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}